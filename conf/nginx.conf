#sub_path_only rewrite ^__PATH__$ __PATH__/ permanent;
location __PATH__/ {

  # Path to source
  alias __FINALPATH__/mediacore/public/ ;

  # Force usage of https
  if ($scheme = http) {
    rewrite ^ https://$server_name$request_uri? permanent;
  }

### Example PHP configuration (remove it if not used)
#  index index.php;

  # Common parameter to increase upload size limit in conjunction with dedicated php-fpm file
  #client_max_body_size 50M;

#  try_files $uri $uri/ index.php;
#  location ~ [^/]\.php(/|$) {
#    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
#    fastcgi_pass unix:/var/run/php5-fpm-__NAME__.sock;

#    fastcgi_index index.php;
#    include fastcgi_params;
#    fastcgi_param REMOTE_USER $remote_user;
#    fastcgi_param PATH_INFO $fastcgi_path_info;
#    fastcgi_param SCRIPT_FILENAME $request_filename;
#  }
### End of PHP configuration part

    # Important: This setting will define maximum upload size, so make
    # sure it is sane for your purposes! For example, if you have a
    # 300MB upload limit in MediaDrop, people will say "Yay! I can upload
    # my 300MB video!" However, if this setting is set to 10MB, then no
    # one will be able to upload videos over 10MB and people will not
    # like you very much.
    client_max_body_size 1500M;

    # And now we define the rest of our static locations below
    location ~* ^/(appearance)/ {
            root __FINALPATH__/data;
            break;
    }

    # All media and podcast images
    location ~* ^(/images\/media|images\/podcasts) {
            root __FINALPATH__/data;
            break;
    }

    # Our standard public file paths
    location ~* ^/(styles|scripts|images)/ {
            expires max;
            add_header Cache-Control "public";
            break;
    }

    # Configure NGINX XSendfile.
    # We use an alias here instead of root so the path info
    # __mediadrop_serve__ is stripped off.
    # Note: "__mediadrop_serve__" is just the default prefix and can be
    # configured using the option "nginx_serve_path" in your deployment.ini.
    # Note: __mediadrop_serve__ should point to the path where MediaDrop
    # stores its media files.
    # Note: We define this as an "internal" location to prevent it from
    # being served directly to end users.
    #location /__mediacore_serve__ {
    #        alias __FINALPATH__/data/media;
    #        internal;
    #}


    # Declare our default location to pass through to our app
    # This will match any request not defined above and pass it to uWSGI
    # Note: The uwsgi_pass directive must use the same socket that was
    # defined in your deployment.ini [uwsgi] block.
    # Note: Make sure that you pass in SCRIPT_NAME = '' otherwise uWSGI
    # will raise a keyError when loading MediaDrop.
    location __PATH__/ {
            uwsgi_pass      unix:///tmp/uwsgi-mediadrop.sock;
            include         uwsgi_params;
            uwsgi_param     SCRIPT_NAME '';
            #uwsgi_param SCRIPT_NAME '__PATH__';
            uwsgi_modifier1 30;
    }
  # Include SSOWAT user panel.
  include conf.d/yunohost_panel.conf.inc;
}
